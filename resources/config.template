[logging]

	# sorting error log
	# when sorting a download and a fatal error is encountered,
	# produce an error log containing all logged data.
	# NOTE: defaults to True
	#generate_sorting_log = True

[tv]

	# tv root directory
	# directory containing all tv shows to watch for
	# NOTE: multiple directories can be specified but must be comma separated 
	tv_root = 

	# umask value used when creating any files or folders.  This option is 
	# used by the sorting script when creating series or season directories
	# NOTE: defaults to 022
	#umask = 022

	# queue download category
	# NOTE: defaults to 'tv'
	#category = tv

	# download priority
	# OPTIONS: normal, high, low, force
	# NOTE: defaults to normal
	#priority = normal

	# ignored file extensions (used when sorting downloads)
	# NOTE: defaults to: nfo,txt,sfv,srt,nzb,idx,log,par,par2,exe,bat,com,tbn,jpg,png,gif,info
	#ignored_extensions = nfo,txt,sfv,srt,nzb,idx,log,par,par2,exe,bat,com,tbn,jpg,png,gif,info

	# allow multi-part episodes
	# NOTE: defaults to True
	#allow_multipart = True

	[[quality]]

		# allow Media Rover to manage episodes on disk and manage quality levels
		# according to user defined preferences
		# WARNING: SETTING THIS OPTION TO TRUE MAY RESULT IN EPISODES BEING DELETED
		#
		# Note: defaults to False
		#managed = False

		# list of acceptable quality levels that can be be scheduled for download
		# Note: you may specify one or more options (separated by a comma)
		#
		# options:
		#  all - any quality level for a missing episode is acceptable
		#  low - episodes from sources marked as low quality
		#  medium - episodes from sources marked as medium quality
		#  high - episodes from sources marked as high quality
		#
		# Note: defaults to 'all'
		#acceptable = all

		# default desired quality level for all downloaded episodes.  Media Rover
		# will schedule episodes for download that already exist on disk in order
		# to achieve the desired quality setting.
		#
		# options:
		#  low - episodes from sources marked as low quality
		#  medium - episodes from sources marked as medium quality
		#  high - episodes from sources marked as high quality
		#
		# Note: only set if managed is True
		#desired = 

	# series specific filter options
	# usage: in order to specify filters for a given series, define
	# a new subsection with the series name.  Define all filter rules
	# within it.
	#
	# Section layout:
	#
	#  [[ filter ]]
	#
	#     [[[ series_name_1 ]]]
	#        skip = <boolean>
	#        ignore = <list>
	#        alias = <list>
	#        [[[[ quality ]]]]
	#            acceptable = all
	#            desired = high
	#
	#     [[[ series_name_2 ]]]
	#        skip = <boolean>
	#        ignore = <list>
	#        alias = <list>
	#        [[[[ quality ]]]]
	#            desired = medium
	#
	#     ...
	#     ..
	#
	#     [[[ series_name_N ]]]
	#        skip = <boolean>
	#        ignore = <list>
	#        alias = <list>
	#
	# Options:
	#  filter:      skip
	#  values:      True or False
	#  default:     False
	#  description: ignore TV series entirely (won't download any new episodes).
	#
	#  filter:      ignore
	#  values:      comma separated list (ie. 1,2,3,4)
	#  default:     none (empty list)
	#  description: comma separated list of seasons to ignore when downloading new episode
	#
	#  filter:      alias
	#  values:      comma separated list (ie. 1,2,3,4)
	#  default:     none (empty list)
	#  description: comma separated list of aliases that will be used to match nzb titles 
	#               when downloading new episodes. For example:
	#
	#               [[ filter ]]
	#                  [[[ The Show Name ]]]
	#                    alias = "Show Name", "Show Name, The"
	#
	# ATTENTION: subsection names should exactly match series folder on disk in order to
	#            guarantee consistent application of filters
	#
	# NOTE: SOME filters can optionally be stored on the filesystem in the series directory.  See
	#       http://wiki.github.com/kierse/mediarover/config-filter for more details
	#
	# See http://wiki.github.com/kierse/mediarover/config-filter for examples
	# 
	[[filter]]
		
	[[template]]

		#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
		# NOTE: Replacing a template variable with its uppercase equivalent 
		# (ie. $(series)s vs $(SERIES)s) will cause Media Rover to output 
		# uppercase data (where relevant).  For example:
		#
		#  $(season_episode_1)s => s01e03
		#  $(SEASON_EPISODE_1)s => S01E03
		#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

		# series naming pattern
		# used when creating series directories
		# 
		#  $(series)s  => "Series Name"
		#  $(series.)s => "Series.Name"
		#  $(series_)s => "Series_Name"
		#
		# NOTE: defaults to '$(series)s'
		#series = $(series)s

		# series season naming pattern
		# used when creating season directories
		#
		#  $(season)d          => 1
		#  $(season)02d        => 01
		#  Season $(season)02d => Season 01
		#
		# NOTE: defaults to 's$(season)02d'
		#season = s$(season)02d

		# episode title pattern
		# used when renaming downloaded episodes
		#
		#  $(title)s  => 'Hello World!'
		#  $(title.)s => 'Hello.World!'
		#  $(title_)s => 'Hello_World!'
		# 
		# NOTE: defaults to '$(title)s'
		#title = $(title)s

		# smart episode title options: (used in conjunction with above title pattern option)
		# NOTE: this variable can be used to generate an intelligent episode title.  If an 
		#       episode title has been found, the pattern will be honoured.  Otherwise, it 
		#       will be replaced with an empty string.
		#
		#  $(smart_title)s = ' - $(title)s' => ' - Hello World!'
		#
		# NOTE: defaults to ' - $(title)s'
		#smart_title = ' - $(title)s'

		# episode quality
		# string representation of an episodes quality
		# NOTE: this parameter can only be used in the single or daily episode templates
		#
		#  $(quality) = 'low', 'medium', or 'high'

		# single episode naming pattern
		# this pattern is the template used when renaming SINGLE episodes. You may use any
		# of the above naming patterns in constructing the file naming pattern 
		#
		#  $(episode)d          => 3
		#  $(episode)02d        => 03
		#  $(season_episode_1)s => s01e03
		#  $(season_episode_2)s => 1x03
		#
		# NOTE: as a bare minimum, the pattern must contain ONE of the above episode numbering 
		#       patterns in order to be valid.  Without this restriction, accurately identifying
		#       episodes on disk would be next to impossible
		#
		# NOTE: defaults to '$(series)s - $(season_episode_1)s$(smart_title)s'
		#single_episode = '$(series)s - $(season_episode_1)s$(smart_title)s'

		# daily episode naming pattern
		# this pattern is the template used when renaming DAILY episodes.  You may use any
		# of the above naming patterns to constructing the file naming pattern
		#
		#  $(daily)s  => 20090112
		#  $(daily.)s => 2009.01.12
		#  $(daily-)s => 2009-01-12
		#  $(daily_)s => 2009_01_12
		#
		# NOTE: as a bare minimum, the pattern must contain ONE of the above daily numbering
		#       patterns in order to be valid.  Without this restriction, accurately identifying
		#       daily episodes on disk would be next to impossible
		#
		# NOTE: defaults to '$(series)s - $(daily-)s$(smart_title)s'
		#daily_episode = '$(series)s - $(daily-)s$(smart_title)s'

# consumable nzb RSS source feeds
# usage: define one or more new subsections under the appropriate plugin.  Each subsection consists
# of a user defined text label, a url pointing to a RSS feed, and zero or more optional arguments.
#
# Section layout:
#
#  [ source ]
#
#     [[ plugin_1 ]]
#
#        # source 1
#        [[[ user_label_1 ]]]
#        
#        	# required
#        	url = http://path/to/rss/feed/...
#        
#        	# optional
#        	timeout = 60 # in seconds
#
#        	# quality (low, medium, high)
#           quality = medium
#        
#        # source 2
#        [[[ user_label_2 ]]]
#        	url = http://path/to/rss/feed/...
#        	timeout = 60 # in seconds
#        	quality = high
#
#     [[ plugin_2 ]]
#        ...
#        ..
#
# Available source plugins:
#
#  newzbin   - http://newzbin.com
#  tvnzb     - http://www.tvnzb.com
#  mytvznb   - any version 2.5 site
#  nzbs      - http://www.nzbs.org
#  nzbmatrix - http://nzbmatrix.com
#
# See http://wiki.github.com/kierse/mediarover/config-source for examples
#
# ATTENTION: you must declare at least one source
[source]

	# default timeout
	# NOTE defaults to 60 seconds
	#default_timeout = 60

	# newzbin.com RSS feeds go here
	[[ newzbin ]]

	# tvnzb.com RSS feeds go here
	[[ tvnzb ]]

	# mytvnzb RSS feeds go here
	[[ mytvnzb ]]

	# nzbs.org RSS feeds go here
	[[ nzbs ]]

	# nzbmatrix.com RSS feeds go here
	[[ nzbmatrix ]]

# binary newsreader consumable queue
# ATTENTION: you must declare at least one queue
#
#  [[sabnzbd]]
#
#    # required
#    root = http://localhost[:PORT]/sabnzbd
#    api_key = <key> # SABnzbd+ 0.4.9 and greater!
#
#    # optional 
#    username = <username>
#    password = <password>
#    backup_dir = /path/to/sabnzbd/nzb_backup_dir
#
# NOTE: if backup_dir is not specified, failed downloads may be rescheduled by Media Rover
[queue]
	
	[[sabnzbd]]
		root = http://localhost:8080/sabnzbd
		api_key = <key>
		backup_dir = 
		#username = 
		#password = 

# WARNING: DO NOT MAKE CHANGES BELOW THIS LINE!
[__SYSTEM__]
	__version__ = %(version)d 
